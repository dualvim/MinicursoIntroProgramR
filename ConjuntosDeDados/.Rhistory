vplTrunc <- trunc(round(vpl, 7)*1000000)
VplFim <- sum(retornaVetorVP(vetorDU, vetorPgtos, tirTrunc))
vplFimTrunc <- round(VplFim, 7)
vplFimTrunc
vplFimTrunc-vlrNomim
vplFimTrunc-vlrNomin
signif(vplFimTrunc-vlrNomin, digits=16)
install.packages("tm")
library(tm)
library(RWeka)
library(stringr)
# String com o direrório com os artigos baixados na busca realizada no Scopus
dirArtigos2 <- "C:/Users/Eduardo/Desktop/Mestrado_UFU/Dissertacao/Artigos/Artigos_Buscas1/"
# Criar um objeto "corpus" com os pdfs dos arquivos do diretorio
corpusPDFs2 <- VCorpus(DirSource(dirArtigos2), readerControl = list(reader = readPDF))
descricoes <- as.character()
autores <-as.character()
nomesArqs <- as.character()
titulos <- as.character()
idioma <- as.character()
for(i in 1:length(corpusPDFs2)){
#print(corpusPDFs[[i]]$meta)
if(length(corpusPDFs2[[i]]$meta$author) == 0){
autores[i] <- ""
}else{
autores[i] <- corpusPDFs2[[i]]$meta$author
}
if(length(corpusPDFs2[[i]]$meta$description) == 0){
descricoes[i] <- ""
}else{
descricoes[i] <- corpusPDFs2[[i]]$meta$description
}
if(length(corpusPDFs2[[i]]$meta$language) == 0){
idioma[i] <- ""
}else{
idioma[i] <- corpusPDFs2[[i]]$meta$language
}
if(length(corpusPDFs2[[i]]$meta$heading) == 0){
titulos[i] <- ""
}else{
titulos[i] <- corpusPDFs2[[i]]$meta$heading
}
nomesArqs[i] <- corpusPDFs2[[i]]$meta$id
}
descricoes
autores
nomesArqs
titulos
idioma
library(tm)
library(RWeka)
library(stringr)
# String com o direrório com os artigos baixados na busca realizada no Scopus
dirArtigos <- "C:/Users/Eduardo/Desktop/Mestrado_UFU/Dissertacao/Artigos/Busca_Scopus/"
# Criar um objeto "corpus" com os pdfs dos arquivos do diretorio acima
corpusPDFs <- VCorpus(DirSource(dirArtigos), readerControl = list(reader = readPDF))
# Vetores com os metadados dos arquivos:
descricoes <- as.character()
autores <-as.character()
nomesArqs <- as.character()
titulos <- as.character()
idioma <- as.character()
for(i in 1:length(corpusPDFs)){
# Metadado Autor
if(length(corpusPDFs[[i]]$meta$author) == 0){
autores[i] <- NA
}else{
autores[i] <- corpusPDFs[[i]]$meta$author
}
# Metadado  Descricao
if(length(corpusPDFs[[i]]$meta$description) == 0){
descricoes[i] <- NA
}else{
descricoes[i] <- corpusPDFs[[i]]$meta$description
}
# Metadado Idioma
if(length(corpusPDFs[[i]]$meta$language) == 0){
idioma[i] <- NA
}else{
idioma[i] <- corpusPDFs[[i]]$meta$language
}
# Metadado Titulo (heading)
if(length(corpusPDFs[[i]]$meta$heading) == 0){
titulos[i] <- NA
}else{
titulos[i] <- corpusPDFs[[i]]$meta$heading
}
#Nome do arquivo
nomesArqs[i] <- corpusPDFs[[i]]$meta$id
}
head(corpusPDFs)
corpusPDFs[[1]]$meta$id
corpusPDFs[[2]]$meta$id
corpusPDFs[[3]]$meta$id
corpusPDFs[[4]]$meta$id
corpusPDFs[[3]]$meta$id <- "Art01.pdf"
corpusPDFs[[3]]$meta$id
corpusPDFs[[3]]$meta$id <- "04.pdf"
corpusPDFs[[1]]$meta$id
corpusPDFs[[2]]$meta$id
corpusPDFs[[3]]$meta$id
corpusPDFs[[4]]$meta$id
?as.data.frame
length(corpusPDFs)
idxArt <- 1:length(corpusPDFs)
?data.frame
dfDadosArtigos <- data.frame(idxArt,descricoes, autores, nomesArqs, titulos,idioma)
View(dfDadosArtigos)
library(stringr)
?stripWhitespace
a <- " "
a
stripWhitespace(a)
View(dfDadosArtigos)
dfDadosArtigos$descricoes[90]
dfDadosArtigos <- data.frame(idxArt, as.character(descricoes), as.character(autores),
as.character(nomesArqs), as.character(titulos), as.character(idioma))
dfDadosArtigos$descricoes[90]
View(dfDadosArtigos)
dim(dfDadosArtigos)
dim(dfDadosArtigos)[2]
?is.null
col <- 2
filtro <- is.null(dfDadosArtigos[, col])
filtro[95:99]
dfDadosArtigos[97, col]
dfDadosArtigos <- data.frame(idxArt, as.character(descricoes), as.character(autores),
as.character(nomesArqs), as.character(titulos), as.character(idioma))
dfDadosArtigos[97, col]
apply(dfDadosArtigos, class)
?apply
?vapply
sapply(dfDadosArtigos, class)
for(col in 2:dim(dfDadosArtigos)[2]){
dfDadosArtigos[, col] <- as.character(dfDadosArtigos)
#filtro <- is.null(dfDadosArtigos[, col])
#dfDadosArtigos[, col] <- is.null()
}
dfDadosArtigos <- data.frame(idxArt, descricoes, autores, nomesArqs, titulos, idioma)
for(col in 2:dim(dfDadosArtigos)[2]){
dfDadosArtigos[, col] <- as.character(dfDadosArtigos[, col])
#filtro <- is.null(dfDadosArtigos[, col])
#dfDadosArtigos[, col] <- is.null()
}
sapply(dfDadosArtigos, class)
dfDadosArtigos[97, 2]
is.null(dfDadosArtigos[97, 2])
dfDadosArtigos[, col][2]
for(col in 2:dim(dfDadosArtigos)[2]){
dfDadosArtigos[, col] <- as.character(dfDadosArtigos[, col])
filtro <- dfDadosArtigos[, col] == ""
dfDadosArtigos[, col][filtro] <- NA
}
View(dfDadosArtigos)
View(dfDadosArtigos)
library(tm)
#library(RWeka)
library(stringr)
# String com o direrório com os artigos baixados na busca realizada no Scopus
dirArtigos <- "C:/Users/Eduardo/Desktop/Mestrado_UFU/Dissertacao/Artigos/Busca_Scopus/"
# Criar um objeto "corpus" com os pdfs dos arquivos do diretorio acima
corpusPDFs <- VCorpus(DirSource(dirArtigos), readerControl = list(reader = readPDF))
# Vetores com os metadados dos arquivos:
idxArt <- 1:length(corpusPDFs)
descricoes <- as.character()
autores <-as.character()
nomesArqs <- as.character()
titulos <- as.character()
idioma <- as.character()
for(i in 1:length(corpusPDFs)){
# Metadado Autor
if(length(corpusPDFs[[i]]$meta$author) == 0){
autores[i] <- NA
}else{
autores[i] <- corpusPDFs[[i]]$meta$author
}
# Metadado  Descricao
if(length(corpusPDFs[[i]]$meta$description) == 0){
descricoes[i] <- NA
}else{
descricoes[i] <- corpusPDFs[[i]]$meta$description
}
# Metadado Idioma
if(length(corpusPDFs[[i]]$meta$language) == 0){
idioma[i] <- NA
}else{
idioma[i] <- corpusPDFs[[i]]$meta$language
}
# Metadado Titulo (heading)
if(length(corpusPDFs[[i]]$meta$heading) == 0){
titulos[i] <- NA
}else{
titulos[i] <- corpusPDFs[[i]]$meta$heading
}
#Nome do arquivo
nomesArqs[i] <- corpusPDFs[[i]]$meta$id
}
head(corpusPDFs[[i]]$content, n=20)
head(corpusPDFs[[1]]$content, n=20)
corpusPDFs[[2]]$meta$id
head(corpusPDFs[[2]]$content, n=20)
head(corpusPDFs[[3]]$content, n=20)
corpusPDFs[[1]]$meta
corpusPDFs[[2]]$meta
corpusPDFs[[3]]$meta
corpusPDFs[[4]]$meta
head(corpusPDFs[[4]]$content, n=20)
# Data Frame com os resultados dos vetores acima:
dfDadosArtigos <- data.frame(idxArt, descricoes, autores, nomesArqs, titulos, idioma)
# Ver as classes dis elementos
sapply(dfDadosArtigos, class)
#Transformar os valores do dataframe em character e converter os valores iguais a "" para NA
for(col in 2:dim(dfDadosArtigos)[2]){
dfDadosArtigos[, col] <- as.character(dfDadosArtigos[, col])
filtro <- dfDadosArtigos[, col] == ""
dfDadosArtigos[, col][filtro] <- NA
}
View(dfDadosArtigos)
dfDadosArtigos[55, 2]
dfDadosArtigos[53, 2]
?oauth_app
?GET
library(stringr)
# String com o direrório com os artigos baixados na busca realizada no Scopus
dirArtigos <- "C:/Users/Eduardo/Desktop/Mestrado_UFU/Dissertacao/Artigos/Busca_Scopus/"
# Criar um objeto "corpus" com os pdfs dos arquivos do diretorio acima
corpusPDFs <- VCorpus(DirSource(dirArtigos), readerControl = list(reader = readPDF))
# Vetores com os metadados dos arquivos:
idxArt <- 1:length(corpusPDFs)
descricoes <- as.character()
autores <-as.character()
nomesArqs <- as.character()
titulos <- as.character()
idioma <- as.character()
for(i in 1:length(corpusPDFs)){
# Metadado Autor
if(length(corpusPDFs[[i]]$meta$author) == 0){
autores[i] <- NA
}else{
autores[i] <- corpusPDFs[[i]]$meta$author
}
# Metadado  Descricao
if(length(corpusPDFs[[i]]$meta$description) == 0){
descricoes[i] <- NA
}else{
descricoes[i] <- corpusPDFs[[i]]$meta$description
}
# Metadado Idioma
if(length(corpusPDFs[[i]]$meta$language) == 0){
idioma[i] <- NA
}else{
idioma[i] <- corpusPDFs[[i]]$meta$language
}
# Metadado Titulo (heading)
if(length(corpusPDFs[[i]]$meta$heading) == 0){
titulos[i] <- NA
}else{
titulos[i] <- corpusPDFs[[i]]$meta$heading
}
#Nome do arquivo
nomesArqs[i] <- corpusPDFs[[i]]$meta$id
}
library(tm)
#library(RWeka)
library(stringr)
# String com o direrório com os artigos baixados na busca realizada no Scopus
dirArtigos <- "C:/Users/Eduardo/Desktop/Mestrado_UFU/Dissertacao/Artigos/Busca_Scopus/"
# Criar um objeto "corpus" com os pdfs dos arquivos do diretorio acima
corpusPDFs <- VCorpus(DirSource(dirArtigos), readerControl = list(reader = readPDF))
# Vetores com os metadados dos arquivos:
idxArt <- 1:length(corpusPDFs)
descricoes <- as.character()
autores <-as.character()
nomesArqs <- as.character()
titulos <- as.character()
idioma <- as.character()
for(i in 1:length(corpusPDFs)){
# Metadado Autor
if(length(corpusPDFs[[i]]$meta$author) == 0){
autores[i] <- NA
}else{
autores[i] <- corpusPDFs[[i]]$meta$author
}
# Metadado  Descricao
if(length(corpusPDFs[[i]]$meta$description) == 0){
descricoes[i] <- NA
}else{
descricoes[i] <- corpusPDFs[[i]]$meta$description
}
# Metadado Idioma
if(length(corpusPDFs[[i]]$meta$language) == 0){
idioma[i] <- NA
}else{
idioma[i] <- corpusPDFs[[i]]$meta$language
}
# Metadado Titulo (heading)
if(length(corpusPDFs[[i]]$meta$heading) == 0){
titulos[i] <- NA
}else{
titulos[i] <- corpusPDFs[[i]]$meta$heading
}
#Nome do arquivo
nomesArqs[i] <- corpusPDFs[[i]]$meta$id
}
# Data Frame com os resultados dos vetores acima:
dfDadosArtigos <- data.frame(idxArt, descricoes, autores, nomesArqs, titulos, idioma)
# Ver as classes dis elementos
sapply(dfDadosArtigos, class)
#Transformar os valores do dataframe em character e converter os valores iguais a "" para NA
for(col in 2:dim(dfDadosArtigos)[2]){
dfDadosArtigos[, col] <- as.character(dfDadosArtigos[, col])
filtro <- dfDadosArtigos[, col] == ""
dfDadosArtigos[, col][filtro] <- NA
}
# String com o direrório com os artigos baixados na busca realizada no Scopus
dirArtigos2 <- "C:/Users/Eduardo/Desktop/Mestrado_UFU/Dissertacao/Artigos/Artigos_Buscas1/"
# Criar um objeto "corpus" com os pdfs dos arquivos do diretorio
corpusPDFs2 <- VCorpus(DirSource(dirArtigos2), readerControl = list(reader = readPDF))
descricoes2 <- as.character()
autores2 <-as.character()
nomesArqs2 <- as.character()
titulos2 <- as.character()
idioma2 <- as.character()
for(i in 1:length(corpusPDFs2)){
if(length(corpusPDFs2[[i]]$meta$author) == 0){
autores2[i] <- ""
}else{
autores2[i] <- corpusPDFs2[[i]]$meta$author
}
if(length(corpusPDFs2[[i]]$meta$description) == 0){
descricoes2[i] <- ""
}else{
descricoes2[i] <- corpusPDFs2[[i]]$meta$description
}
if(length(corpusPDFs2[[i]]$meta$language) == 0){
idioma2[i] <- ""
}else{
idioma2[i] <- corpusPDFs2[[i]]$meta$language
}
if(length(corpusPDFs2[[i]]$meta$heading) == 0){
titulos2[i] <- ""
}else{
titulos2[i] <- corpusPDFs2[[i]]$meta$heading
}
nomesArqs2[i] <- corpusPDFs2[[i]]$meta$id
}
descricoes2
autores2
nomesArqs2
titulos2
idioma2
corpusPDFs[[1]]$content[2]
corpusPDFs[[1]]$content[3]
corpusPDFs[[1]]$content[5]
corpusPDFs[[1]]$content[6]
corpusPDFs[[1]]$content[10]
corpusPDFs[[1]]$content[11]
corpusPDFs[[1]]$content[12]
?strsplit
grepl(tolower(corpusPDFs[[1]]$content[12]), "keywords")
grepl(tolower(corpusPDFs[[1]]$content[12]), "*Keywords*")
grepl(tolower(corpusPDFs[[1]]$content[12]), "*keywords*")
grepl("Keywords", tolower(corpusPDFs[[1]]$content[12]))
?grep
grepl("*Keywords*", corpusPDFs[[1]]$content[12], ignore.case=TRUE)
grepl("Keywords", corpusPDFs[[1]]$content[12], ignore.case=TRUE)
strsplit(corpusPDFs[[1]]$content[12], split="keywords")[2]
strsplit(corpusPDFs[[1]]$content[12], split="keywords")
grep("Keywords", corpusPDFs[[1]]$content[12], ignore.case=TRUE)
strsplit(corpusPDFs[[1]]$content[12], split="Keywords")
strsplit(tolower(corpusPDFs[[1]]$content[12]), split="keywords")
strsplit(tolower(corpusPDFs[[1]]$content[12]), split="keywords")[2]
strsplit(tolower(corpusPDFs[[1]]$content[12]), split="keywords")[[2]]
strsplit(tolower(corpusPDFs[[1]]$content[12]), split="keywords")[[1]][2]
grepl("palavras+chave", corpusPDFs[[3]]$content[13], ignore.case=TRUE)
corpusPDFs[[3]]$content[13]
grepl("palavras[ -]chave", corpusPDFs[[3]]$content[13], ignore.case=TRUE)
grepl("keyword[s ]", corpusPDFs[[1]]$content[12], ignore.case=TRUE)
strsplit(tolower(corpusPDFs[[1]]$content[12]), split="keyword")[[1]][2]
strsplit(tolower(corpusPDFs[[1]]$content[12]), split="keyword[s ]")[[1]][2]
strsplit(tolower(corpusPDFs[[3]]$content[13]), split="palavras[ -]chave")[[1]][2]
cadEmpsAbertas <- read.csv2(file="CadastroCiasAbertas.csv", na.strings = "")
getwd()
setwd("C:/Users/Eduardo/Desktop/Minicurso_R/RepoMinicursoIntroProgramR/MinicursoIntroProgramR/ConjuntosDeDados/")
setwd("C:\\Users\\Eduardo\\Desktop\\Minicurso_R\\RepoMinicursoIntroProgramR\\MinicursoIntroProgramR\\ConjuntosDeDados\\")
setwd("C:/Users/Eduardo/Desktop/Minicurso_R/RepoMinicursoIntroProgramR/MinicursoIntroProgramR/ConjuntosDeDados/")
# Carregar o conjunto de dados:
dados <- read.table(file="Aula03_ConjDados_cdc.txt", header=TRUE, sep=",")
# Tipo de objeto de "dados"
class(dados)
# Ver os nomes das variáveis contidas no data.frame "dados"
names(dados)
# Ver o número de observações e de variáveis em "dados"
dim(dados)
# Ver as 5 primeiras observações em "dados"
head(dados, n = 5)
# Ver as 5 últimas observações em "dados"
tail(dados, n = 5)
# Espaço em memória ocupado pelo objeto "dados"
object.size(dados) #em bytes
print(object.size(dados), units="Kb") # em Kb
print(object.size(dados), units="Mb") # em Mb
class(dados$genhlth) # "factor"
table(dados$genhlth)
summary(dados$genhlth)
table(dados$smoke100)
table(dados$genhlth, dados$smoke100)
dados$genhlth <- factor(dados$genhlth,
table(dados$genhlth, dados$smoke100)
barplot(table(dados$genhlth), main ="Estados de saúde")
barplot(table(dados$genhlth), main ="Estados de saúde")
table(dados$genhlth, dados$smoke100)
mosaicplot(tabFumGen, main = "Gênero Vs. Fumantes", xlab = "Sexo", ylab="Fumante")
tabFumGen <- table(dados$gender, dados$smoke100)
mosaicplot(tabFumGen, main = "Gênero Vs. Fumantes", xlab = "Sexo", ylab="Fumante")
tabFumGen
View(dados)
sapply(dados[, c(5,6,7,8)], mean)
?sapply
sapply(dados[, c(5,6,7,8)], mean, simplify=TRUE)
sapply(dados[, c(5,6,7,8)], mean, simplify=FALSE)
v <- sapply(dados[, c(5,6,7,8)], mean) #Formato Tabela
v
rm(v)
# histograma:
hist(dados$weight, main = "Histograma Peso", xlab="Peso (em lb)")
# Histograma com 25 "barras" verticais
hist(dados$weight, breaks= 60, main = "Histograma Peso", xlab="Peso (em lb)")
# Adicionar ao histograma a concentração das observações
rug(dados$weight, col="red")
# Gráfico Boxplot:
boxplot(dados$height, main="Boxplot Alturas")
# Gráfico boxplot Peso e fumante
boxplot(dados$weight~dados$smoke100,
xlab = "Fumante",
ylab = "Peso (em lb)")
# Gráfico de dispersão entre peso e altura:
plot(dados$weight, dados$height,
main = "Peso Vs. Altura",
xlab = "Peso (em lb)",
ylab = "Altura (em pol.)")
# Versão do gráfico colorida por gênero
plot(dados$weight, dados$height,
col = dados$gender,
main = "Peso Vs. Altura",
xlab = "Peso (em lb)",
ylab = "Altura (em pol.)")
#######################################
# Versão colorida com legenda         #
#######################################
# 1 - Adicionar as observações referentes ao sexo fenminino:
plot(x = dados$weight[dados$gender == "m"],
y = dados$height[dados$gender == "m"],
main = "Peso Vs. Altura",
xlab = "Peso (em lb)",
ylab = "Altura (em pol.)",
pch = 16,
col = "blue")
# 2 - Adicionar as observações referentes ao sexo Masculino:
points(x = dados$weight[dados$gender == "f"],
y = dados$height[dados$gender == "f"],
pch = 8,
col = "pink")
# 3 - Adicionar a Legenda
legend("bottomright", pch = c(8, 16), col=c("blue", "pink"), legend = c("Masculino", "Feminino"))
summary(dados$genhlth)
mean(dados$height, na.rm=TRUE)
mean(dados[,5], na.rm=TRUE)
names(dados)
sapply(dados, is.na)
sapply(dados, sum)
lapply(dados, sum)
apply(dados, 2, sum)
apply(dados[, c(5,6,7,8)], 2, sum)
names(dados)
tapply(dados[, c(5,6,7,8)], dados$genhlth, mean)
tapply(dados$weight, dados$genhlth, mean)
?tappply
?tapply
vapply(dados[, c(5,6,7,8)], mean)
hist(dados$weight, main = "Histograma Peso", xlab="Peso (em lb)")
lines(density(ados$weight))
lines(density(dados$weight))
lines(density(dados$weight, frequency=TRUE))
?density
curve(density(dados$weight, frequency=TRUE))
hist(dados$weight, main = "Histograma Peso", xlab="Peso (em lb)")
lines(density(dados$weight), type="l")
# Histograma com 60 "barras" verticais
hist(dados$weight, breaks= 60, main = "Histograma Peso", xlab="Peso (em lb)")
hist(dados$wtdesire, freq = FALSE, main = "Histograma Peso", xlab="Peso desejado (em lb)")
lines(density(dados$wtdesire))
hist(dados$age, freq = FALSE, main = "Histograma Peso", xlab="Peso desejado (em lb)")
lines(density(dados$age))
hist(dados$age, freq = FALSE, main = "Histograma Idades", xlab="Idade", col="yelow")
lines(density(dados$age), col = "Green")
hist(dados$age, freq = FALSE, main = "Histograma Idades", xlab="Idade", col="yellow")
lines(density(dados$age), col = "Green")
lines(density(dados$age), col = "Green", lwd=5)
boxplot(dados$height, main="Boxplot Alturas", col="red")
boxplot(dados$height, main="Boxplot Alturas")
?boxplot
boxplot(dados$weight~dados$smoke100,
xlab = "Fumante",
ylab = "Peso (em lb)")
boxplot(dados$weight~dados$smoke100,
xlab = "Fumante",
ylab = "Peso (em lb)", col=c("blue", "red"))
plot(dados$weight, dados$height,
main = "Peso Vs. Altura",
xlab = "Peso (em lb)",
ylab = "Altura (em pol.)")
